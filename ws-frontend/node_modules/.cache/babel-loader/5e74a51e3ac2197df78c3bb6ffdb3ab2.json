{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"RegisterView\",\n  data: function data() {\n    return {\n      korisnik: {},\n      noviProizvod: {},\n      proizvod: {\n        kategorija: {\n          naziv: \"\"\n        }\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.isUserLogged();\n    this.fetchProizvod();\n  },\n  methods: {\n    fetchProizvod: function fetchProizvod() {\n      var _this = this;\n\n      var id = this.$route.params.id;\n      axios.get(\"http://localhost:8081/api/products/\".concat(id), {\n        withCredentials: true\n      }).then(function (response) {\n        _this.proizvod = response.data;\n        console.log(response.data);\n      })[\"catch\"](function (error) {\n        console.log(error); //alert(error.data);\n      });\n    },\n    search: function search() {\n      var _this2 = this;\n\n      if (this.searchTerm === \"\") {\n        this.getProizvodi();\n      } else {\n        axios.get(\"http://localhost:8081/api/search-products/\" + this.searchTerm, {\n          withCredentials: true\n        }).then(function (response) {\n          _this2.proizvodi = response.data;\n        })[\"catch\"](function (err) {\n          console.log(err);\n          alert(\"Something went wrong!\");\n        });\n      }\n    },\n    izmeniProizvod: function izmeniProizvod() {\n      axios.put(\"http://localhost:8081/api/proizvod/update/\".concat(this.$route.params.id, \"?loggedUsername=\") + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme, {\n        withCredentials: true\n      }).then(function (response) {\n        alert(response.data);\n        console.log(response.data);\n      })[\"catch\"](function (error) {\n        console.log(error); //alert(error.data);\n      });\n    },\n    seeMore: function seeMore(id) {\n      this.$router.push(\"/api/products/\" + id);\n    },\n    login: function login() {\n      this.$router.push(\"/api/login\");\n    },\n    goHome: function goHome() {\n      this.$router.push(\"/api/home\");\n    },\n    isUserLogged: function isUserLogged() {\n      if (localStorage.getItem('loggedUser') == null) {} else {\n        var korisnik = JSON.parse(localStorage.getItem('loggedUser'));\n\n        if (korisnik.uloga == 'KUPAC') {\n          this.$router.push('/api/kupac/home/' + korisnik.korisnickoIme);\n        } else if (korisnik.uloga == 'PRODAVAC') {} else {\n          this.$router.push('/administrator_view');\n        }\n      }\n    },\n    logOut: function logOut() {\n      localStorage.removeItem('loggedUser');\n      this.ulogovaniKorisnik = null;\n      alert(\"Uspesno ste se odjavili!\");\n      this.$router.push('/api/home');\n    },\n    updateProdavac: function updateProdavac() {\n      this.$router.push(\"/api/prodavac/update/\" + this.$route.params.username);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","korisnik","noviProizvod","proizvod","kategorija","naziv","mounted","isUserLogged","fetchProizvod","methods","id","$route","params","get","withCredentials","then","response","console","log","error","search","searchTerm","getProizvodi","proizvodi","err","alert","izmeniProizvod","put","JSON","parse","localStorage","getItem","korisnickoIme","seeMore","$router","push","login","goHome","uloga","logOut","removeItem","ulogovaniKorisnik","updateProdavac","username"],"sourceRoot":"","sources":["/home/ivan/Documents/Faks/Web/Projekat/project-web-in-2024-team-12/ws-frontend/src/views/ProdavacIzmeniProizvodView.vue"],"sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n   <div class=\"container-fluid\">\n     <a class=\"navbar-brand\" href=\"#\">WebShop</a>\n     <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n       <span class=\"navbar-toggler-icon\"></span>\n     </button>\n     <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n       <ul class=\"navbar-nav mb-2 mb-lg-0\">\n         <li class=\"nav-item\">\n           <a class=\"nav-link active\" aria-current=\"page\" href=\"#\" v-on:click=\"goHome()\">Pocetna</a>\n         </li>\n         <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Dodaj proizvod</a>\n          </li>\n         \n       </ul>\n       <form class=\"d-flex\" role=\"search\" >\n         \n       </form>\n       <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n        <img v-on:click=\"updateProdavac()\" src=\"https://cdn-icons-png.flaticon.com/256/6522/6522516.png\" id=\"profile-photo\">\n        <p id=\"log-out\" v-on:click=\"logOut()\">Log out</p>\n       </div>\n     </div>\n   </div>\n </nav>\n       <h1>Dodaj proizvod</h1>\n   <form class=\"row g-3\" @submit.prevent=\"izmeniProizvod\">\n <div class=\"col-md-12\">\n   <label for=\"inputNaziv\" class=\"form-label\">Naziv proizvoda</label>\n   <input type=\"text\" class=\"form-control\" id=\"inputNaziv\" v-model=\"proizvod.naziv\">\n </div>\n <div class=\"col-md-12\">\n   <label for=\"inputOpis\" class=\"form-label\">Opis</label>\n   <input type=\"text\" class=\"form-control\" id=\"inputOpis\" v-model=\"proizvod.opis\">\n </div>\n <div class=\"col-md-6\">\n   <label for=\"inputSlika\" class=\"form-label\">Slika</label>\n   <input type=\"text\" class=\"form-control\" id=\"inputSlika\" v-model=\"proizvod.slika\">\n </div>\n <div class=\"col-md-6\">\n   <label for=\"inputCena\" class=\"form-label\">Cena</label>\n   <input type=\"text\" class=\"form-control\" id=\"inputCena\" v-model=\"proizvod.cena\">\n </div>\n <div class=\"col-6\">\n   <label for=\"inputKategorija\" class=\"form-label\">Ime kategorije</label>\n   <input type=\"text\" class=\"form-control\" id=\"inputKategorija\"  v-model=\"proizvod.kategorija.naziv\">\n </div>\n \n <div class=\"col-md-6\">\n   <label for=\"inputRole\" class=\"form-label\">Tip prodaje</label>\n   <select id=\"inputRole\" class=\"form-select\" v-model=\"proizvod.tipProdaje\">\n     <option selected>Izaberi...</option>\n     <option>FIKSNACENA</option>\n     <option>AUKCIJA</option>\n\n   </select>\n </div>\n \n\n\n\n <div class=\"col-md-6\">\n   <button class=\"btn btn-primary\" id=\"btn-register\">Izmeni proizvod</button>\n </div>\n</form>\n </template>\n \n <script>\n import axios from \"axios\";\n export default {\n   name: \"RegisterView\",\n   data: function () {\n     return {\n       korisnik: {},\n       noviProizvod: {},\n       proizvod: {\n        kategorija : {\n            naziv : \"\",\n        }\n       }\n     };\n   },\n   mounted (){\n     this.isUserLogged();\n     this.fetchProizvod();\n   },\n   methods: {\n    fetchProizvod() {\n        const id = this.$route.params.id;\n        axios.get(`http://localhost:8081/api/products/${id}`, { withCredentials: true })\n            .then((response) => {\n                this.proizvod = response.data;\n            \n            console.log(response.data);\n            })\n            .catch((error) => {\n                console.log(error);\n                //alert(error.data);\n            });\n       },\n     search: function () {\n     if(this.searchTerm === \"\"){\n       this.getProizvodi();\n\n     } else{\n       axios\n       .get(\"http://localhost:8081/api/search-products/\"+ this.searchTerm, { withCredentials: true })\n       .then((response) => {\n       this.proizvodi = response.data;\n       \n     })\n       .catch((err) => {\n       console.log(err);\n       alert(\"Something went wrong!\");\n     });\n\n     }\n    \n   },\n   izmeniProizvod: function(){\n    axios.put(`http://localhost:8081/api/proizvod/update/${this.$route.params.id}?loggedUsername=`+JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme, { withCredentials: true })\n        .then((response) => {\n        alert(response.data);\n        \n        console.log(response.data);\n        })\n        .catch((error) => {\n            console.log(error);\n            //alert(error.data);\n        });\n\n   },\n   seeMore: function (id) {\n     this.$router.push(\"/api/products/\" + id);\n   },\n   login: function () {\n     this.$router.push(\"/api/login\");\n   },\n  \n   goHome: function () {\n     this.$router.push(\"/api/home\");\n   },\n   isUserLogged: function () {\n     if (localStorage.getItem('loggedUser') == null) {\n       \n     }\n     else {\n       const korisnik = JSON.parse(localStorage.getItem('loggedUser'));\n       if (korisnik.uloga == 'KUPAC') {\n         this.$router.push('/api/kupac/home/'+korisnik.korisnickoIme);\n       }\n       else if (korisnik.uloga == 'PRODAVAC') {\n       }\n       else {\n         this.$router.push('/administrator_view');\n       }\n     }\n   },\n   logOut: function () {\n      localStorage.removeItem('loggedUser');\n      this.ulogovaniKorisnik = null;\n     \n\n      alert(\"Uspesno ste se odjavili!\");\n      this.$router.push('/api/home');\n    },\n    updateProdavac: function () {\n      this.$router.push(\"/api/prodavac/update/\"+this.$route.params.username);\n    },\n   },\n };\n </script>\n\n <style scoped>\n   .g-3{\n       width: 50%;\n       margin: auto;\n   }\n\n   #btn-register{\n       margin-top: 30px;\n       width: 200px;\n   }\n\n   #loginBtn {\n background-color: #858585;\n border-color: #858585;\n}\n\n#loginBtn:hover {\n background-color: #3e4240;\n}\n\n#registerBtn {\n background-color: #858585;\n border-color: #858585;\n}\n\n#registerBtn:hover {\n background-color: #3e4240;\n}\n\n.d-flex {\n margin-right: auto;\n}\n#profile-photo{\n    width: 15%;\n    margin-right: 30px;\n}\n\n#log-out{\n  margin-right:20px;\n  margin-left: 10px;\n  margin-top: auto;\n}\n</style>"]},"metadata":{},"sourceType":"module"}