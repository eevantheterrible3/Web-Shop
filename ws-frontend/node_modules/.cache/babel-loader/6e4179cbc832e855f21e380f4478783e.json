{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"SeeProdavacView\",\n  data: function data() {\n    return {\n      product: {},\n      korisnik: {},\n      sviProizvodi: {},\n      OceniProdavca: {\n        prosecnaOcena: 0.0\n      },\n      PrijavaDto: {},\n      recenzije: [],\n      Recenzija: {},\n      isProdavac: false\n    };\n  },\n  mounted: function mounted() {\n    this.initialize(); //this.sveRecenzije();\n    //this.isProdavacF();\n  },\n  methods: {\n    initialize: function initialize() {\n      var _this = this;\n\n      axios.get(\"http://localhost:8081/api/onereview/\".concat(this.$route.params.id), {\n        withCredentials: true\n      }).then(function (res) {\n        _this.Recenzija = res.data;\n        console.log(_this.Recenzija);\n      })[\"catch\"](function (err) {\n        console.log(err);\n        alert(err.response.data);\n      });\n    },\n    obrisiRecenziju: function obrisiRecenziju(id) {\n      axios[\"delete\"](\"http://localhost:8081/api/delete-review/\".concat(id, \"?logovaniUsername=\") + this.$route.params.username, {\n        withCredentials: true\n      }).then(function (res) {\n        alert(res.data);\n      })[\"catch\"](function (err) {\n        console.log(err); //alert(err.response.data);\n      });\n    },\n    sveRecenzije: function sveRecenzije() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8081/api/reviews?logovaniUsername=\" + this.$route.params.username, {\n        withCredentials: true\n      }).then(function (res) {\n        _this2.recenzije = res.data;\n        console.log(_this2.recenzije);\n      })[\"catch\"](function (err) {\n        console.log(err); //alert(err.response.data);\n      });\n    },\n    isProdavacF: function isProdavacF() {\n      if (JSON.parse(localStorage.getItem(\"loggedUser\")).uloga == \"PRODAVAC\") {\n        this.isProdavac = true;\n      } else {\n        this.isProdavac = false;\n      }\n    },\n    viewUsers: function viewUsers() {\n      this.$router.push(\"/api/kupac/korisnici\");\n    },\n    addProduct: function addProduct() {\n      this.$router.push(\"/api/prodavac/add-product/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n    update: function update() {\n      var _this3 = this;\n\n      axios.put(\"http://localhost:8081/logged-user/update\", this.korisnik, {\n        withCredentials: true\n      }).then(function (res) {\n        console.log(res.data);\n        alert(\"Uspesno izvrseno azuriranje kupca!\");\n\n        _this3.$router.push(\"/api/kupac/home/\" + _this3.korisnik.korisnickoIme);\n      })[\"catch\"](function (err) {\n        alert(err.response.data);\n      });\n    },\n    seeMore: function seeMore(id) {\n      this.$router.push(\"/api/kupac/products/\" + id);\n    },\n    updateKupac: function updateKupac() {\n      this.$router.push(\"/api/kupac/update/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n    login: function login() {\n      this.$router.push(\"/api/login\");\n    },\n    goHome: function goHome() {\n      this.$router.push(\"/api/home\");\n    },\n    oceni: function oceni() {\n      this.OceniProdavca.proizvodId = this.$route.params.id;\n      var logovaniKorisnik = JSON.parse(localStorage.getItem(\"loggedUser\"));\n      console.log(this.OceniProdavca);\n      console.log(logovaniKorisnik);\n      var requestData = {\n        oceniProdavcaDto: this.OceniProdavca,\n        logovani: JSON.parse(localStorage.getItem(\"loggedUser\"))\n      };\n      axios.post(\"http://localhost:8081/api/oceni-prodavca\", requestData, {\n        withCredentials: true\n      }).then(function (response) {\n        alert(response.data);\n      })[\"catch\"](function (err) {\n        console.log(err);\n        alert(err.response.data);\n      });\n    },\n    logOut: function logOut() {\n      localStorage.removeItem('loggedUser');\n      this.ulogovaniKorisnik = null;\n      alert(\"Uspesno ste se odjavili!\");\n      this.$router.push('/api/home');\n    },\n    prijavi: function prijavi() {\n      if (localStorage.getItem(\"loggedUser\") != null) {\n        axios.post(\"http://localhost:8081/api/reportseller/\" + this.$route.params.id + \"?loggedUsername=\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme, this.PrijavaDto, {\n          withCredentials: true\n        }).then(function (response) {\n          alert(response.data);\n        })[\"catch\"](function (err) {\n          console.log(err);\n          alert(err.response.data);\n        });\n      } else {\n        alert(\"Niste ulogovani!\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","product","korisnik","sviProizvodi","OceniProdavca","prosecnaOcena","PrijavaDto","recenzije","Recenzija","isProdavac","mounted","initialize","methods","get","$route","params","id","withCredentials","then","res","console","log","err","alert","response","obrisiRecenziju","username","sveRecenzije","isProdavacF","JSON","parse","localStorage","getItem","uloga","viewUsers","$router","push","addProduct","korisnickoIme","update","put","seeMore","updateKupac","login","goHome","oceni","proizvodId","logovaniKorisnik","requestData","oceniProdavcaDto","logovani","post","logOut","removeItem","ulogovaniKorisnik","prijavi"],"sourceRoot":"","sources":["/home/ivan/Documents/Faks/Web/Projekat/project-web-in-2024-team-12/ws-frontend/src/views/AdminUpdateRecenzijaView.vue"],"sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">WebShop</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mb-2 mb-lg-0\">\n        \n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" v-on:click=\"viewReviews()\">Recenzije</a>\n          </li>\n          \n            <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" v-on:click=\"viewReports()\">Prijave</a>\n          </li>\n         \n\n        \n        </ul>\n        <form class=\"d-flex\" role=\"search\">\n          \n        </form>\n        <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n         <img v-on:click=\"updateKupac()\" src=\"https://cdn-icons-png.flaticon.com/256/6522/6522516.png\" id=\"profile-photo\">\n         <p id=\"log-out\" v-on:click=\"logOut()\">Log out</p>\n\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <h3>Izmeni recenziju</h3>\n <div class=\"col-md-6\">\n   <label for=\"inputOcena\" class=\"form-label\">Ocena</label>\n   <input min=\"1\" max=\"5\" type=\"number\" class=\"form-control\" id=\"inputOcena\" v-model=\"this.Recenzija.ocena\" >\n </div>\n\n <div class=\"col-md-6\">\n   <label for=\"inputKomentar\" class=\"form-label\">Komentar</label>\n   <input type=\"text\" class=\"form-control\" id=\"inputKomentar\" v-model=\"this.Recenzija.komentar\" >\n   \n  \n </div>\n <button class=\"btn btn-primary\" id=\"btn-oceni\" v-on:click=\"izmeni()\" >Izmeni</button>\n     \n\n \n </template>\n \n <script>\n import axios from \"axios\";\n export default {\n   name: \"SeeProdavacView\",\n   data: function () {\n     return {\n       product: {},\n       korisnik:{},\n       sviProizvodi: {},\n       OceniProdavca:{\n        prosecnaOcena: 0.0,\n       },\n       PrijavaDto: {},\n       recenzije: [],\n       Recenzija: {},\n       isProdavac : false,\n     };\n     \n   },\n   mounted: function () {\n    this.initialize();\n    //this.sveRecenzije();\n    //this.isProdavacF();\n       \n            \n  },\n   methods: {\n\n    initialize: function(){\n        axios\n        .get(`http://localhost:8081/api/onereview/${this.$route.params.id}`, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                this.Recenzija = res.data;\n                console.log(this.Recenzija);\n\n              \n            })\n            .catch((err) => {\n                console.log(err);\n                alert(err.response.data);\n            });\n\n    },\n\n    obrisiRecenziju: function(id){\n      axios\n        .delete(`http://localhost:8081/api/delete-review/${id}?logovaniUsername=`+this.$route.params.username, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                alert(res.data);\n               \n\n            \n            })\n            .catch((err) => {\n                console.log(err);\n                //alert(err.response.data);\n            });\n\n\n    },\n    sveRecenzije: function(){\n        axios\n        .get(`http://localhost:8081/api/reviews?logovaniUsername=`+this.$route.params.username, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                this.recenzije = res.data;\n                console.log(this.recenzije);\n\n            \n            })\n            .catch((err) => {\n                console.log(err);\n                //alert(err.response.data);\n            });\n\n\n    },\n    isProdavacF: function(){\n      if(JSON.parse(localStorage.getItem(\"loggedUser\")).uloga == \"PRODAVAC\"){\n        this.isProdavac = true;\n      }\n      else{\n        this.isProdavac = false;\n\n      }\n    },\n    viewUsers: function(){\n      this.$router.push(\"/api/kupac/korisnici\");\n\n    },\n  \n    addProduct: function () {\n      this.$router.push(\"/api/prodavac/add-product/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n     update: function () {\n       axios\n         .put(\"http://localhost:8081/logged-user/update\", this.korisnik, {\n           withCredentials: true,\n         })\n         .then((res) => {\n           console.log(res.data);\n           alert(\"Uspesno izvrseno azuriranje kupca!\");\n           \n           this.$router.push(\"/api/kupac/home/\"+this.korisnik.korisnickoIme);\n         })\n         .catch((err) => {\n           alert(err.response.data);\n         });\n \n     },\n    \n   seeMore: function (id) {\n     this.$router.push(\"/api/kupac/products/\" + id);\n   },\n   updateKupac: function () {\n      this.$router.push(\"/api/kupac/update/\"+JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n   login: function () {\n     this.$router.push(\"/api/login\");\n   },\n  \n   goHome: function () {\n     this.$router.push(\"/api/home\");\n   },\n\n   oceni: function(){\n    this.OceniProdavca.proizvodId = this.$route.params.id;\n    const logovaniKorisnik = JSON.parse(localStorage.getItem(\"loggedUser\"));\n    console.log(this.OceniProdavca);\n    console.log(logovaniKorisnik);\n    const requestData = {\n        oceniProdavcaDto: this.OceniProdavca,\n        logovani: JSON.parse(localStorage.getItem(\"loggedUser\"))\n      };\n    axios\n       .post(\"http://localhost:8081/api/oceni-prodavca\",requestData, {withCredentials: true })\n       .then((response) => {\n       alert(response.data);\n       \n     })\n       .catch((err) => {\n       console.log(err);\n       alert(err.response.data);\n     });\n\n   },\n   logOut: function () {\n      localStorage.removeItem('loggedUser');\n      this.ulogovaniKorisnik = null;\n     \n\n      alert(\"Uspesno ste se odjavili!\");\n      this.$router.push('/api/home');\n    },\n   prijavi: function(){\n   if(localStorage.getItem(\"loggedUser\") != null){\n    axios\n       .post(\"http://localhost:8081/api/reportseller/\"+this.$route.params.id+\"?loggedUsername=\"+JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme,this.PrijavaDto, {withCredentials: true })\n       .then((response) => {\n       alert(response.data);\n       \n     })\n       .catch((err) => {\n       console.log(err);\n       alert(err.response.data);\n     });\n   } else{\n    alert(\"Niste ulogovani!\");\n   }\n    \n    \n   }\n   },\n };\n </script>\n\n <style scoped>\n   .g-3{\n       width: 50%;\n       margin: auto;\n   }\n\n   #btn-register{\n       margin-top: 30px;\n       width: 200px;\n   }\n\n   #loginBtn {\n background-color: #858585;\n border-color: #858585;\n}\n\n#loginBtn:hover {\n background-color: #3e4240;\n}\n\n#registerBtn {\n background-color: #858585;\n border-color: #858585;\n}\n\n#registerBtn:hover {\n background-color: #3e4240;\n}\n\n.d-flex {\n margin-right: auto;\n}\n\n#profile-photo{\n    width: 15%;\n    margin-right: 30px;\n}\n\n.card-deck {\n  display: flex;\n  height: fit-content;\n  flex-wrap: wrap;\n  align-items: center;\n  text-align: center;\n  margin: auto;\n  padding-left: 200px;\n  padding-right: 200px;\n  margin-top: 50px;\n}\n\n.card {\n  display: inline-block;\n  padding: 5px;\n  margin: 0.5%;\n}\n\n.card-text {\n  height: 50px;\n}\n\n.card-img-top {\n  width: 100%;\n}\n.btn-primary{\n  margin: auto;\n}\n\n#btn-oceni{\n  margin-top: 30px;\n  margin-bottom: 30px;\n  width: 20%;\n\n}\n.div-prijavi{\n  display: flex;\n  width: 50%;\n  margin: auto;\n  margin-bottom: 50px;\n  \n}\n\n#btn-prijavi{\n  display: inline;\n  margin: 10px;\n  width: 20%;\n\n}\n#inputRazlogPrijave{\n  \n}\n#log-out{\n  margin-right:20px;\n  margin-left: 10px;\n  margin-top: auto;\n}\n\n.obrisi{\n  margin-bottom: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}