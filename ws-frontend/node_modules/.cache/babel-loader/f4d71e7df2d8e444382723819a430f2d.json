{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/ivan/Documents/Faks/Web/Projekat/project-web-in-2024-team-12/ws-frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"SeeProdavacView\",\n  data: function data() {\n    return {\n      product: {},\n      korisnik: {},\n      sviProizvodi: {},\n      OceniProdavca: {\n        prosecnaOcena: 0.0\n      },\n      PrijavaDto: {},\n      prijave: [],\n      isProdavac: false,\n      razlogPrijave: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.initialize();\n    this.svePrijave();\n    this.isProdavacF();\n  },\n  methods: {\n    initialize: function initialize() {\n      var _this = this;\n\n      axios.get(\"http://localhost:8081/api/korisnik/view/\".concat(this.$route.params.username), {\n        withCredentials: true\n      }).then(function (res) {\n        _this.korisnik = res.data;\n        console.log(_this.korisnik);\n\n        if (_this.korisnik.uloga === \"PRODAVAC\") {\n          _this.sviProizvodi = [];\n\n          var _iterator = _createForOfIteratorHelper(_this.korisnik.proizvodi),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var proizvod = _step.value;\n\n              if (!proizvod.prodat) {\n                _this.sviProizvodi.push(proizvod);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else if (_this.korisnik.uloga === \"KUPAC\") {\n          _this.sviProizvodi = _this.korisnik.kupljeniProizvodi;\n        }\n      })[\"catch\"](function (err) {\n        console.log(err);\n        alert(err.response.data);\n      });\n    },\n    izmeniRecenziju: function izmeniRecenziju(id) {\n      this.$router.push(\"/api/admin/recenzije/update/\" + id);\n    },\n    viewReviews: function viewReviews() {\n      this.$router.push(\"/api/admin/recenzije/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n    viewReports: function viewReports() {\n      this.$router.push(\"/api/admin/prijave/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n    prihvatiPrijavu: function prihvatiPrijavu(id) {\n      var _this2 = this;\n\n      axios.post(\"http://localhost:8081/api/acceptreport/\".concat(id, \"?logovaniUsername=\") + this.$route.params.username, {\n        withCredentials: true\n      }).then(function (res) {\n        console.log(_this2.prijave);\n        alert(res.data);\n      })[\"catch\"](function (err) {\n        console.log(err); //alert(err.response.data);\n      });\n    },\n    odbaciPrijavu: function odbaciPrijavu(id) {\n      var _this3 = this;\n\n      axios.post(\"http://localhost:8081/api/rejectreport/\".concat(id, \"?logovaniUsername=\") + this.$route.params.username, this.razlogPrijave, {\n        withCredentials: true\n      }).then(function (res) {\n        console.log(_this3.prijave);\n        alert(res.data);\n      })[\"catch\"](function (err) {\n        console.log(err); //alert(err.response.data);\n      });\n    },\n    obrisiRecenziju: function obrisiRecenziju(id) {\n      axios[\"delete\"](\"http://localhost:8081/api/delete-review/\".concat(id, \"?logovaniUsername=\") + this.$route.params.username, {\n        withCredentials: true\n      }).then(function (res) {\n        alert(res.data);\n      })[\"catch\"](function (err) {\n        console.log(err); //alert(err.response.data);\n      });\n    },\n    svePrijave: function svePrijave() {\n      var _this4 = this;\n\n      axios.get(\"http://localhost:8081/api/reports?logovaniUsername=\" + this.$route.params.username, {\n        withCredentials: true\n      }).then(function (res) {\n        _this4.prijave = res.data;\n        console.log(_this4.prijave);\n      })[\"catch\"](function (err) {\n        console.log(err); //alert(err.response.data);\n      });\n    },\n    isProdavacF: function isProdavacF() {\n      if (JSON.parse(localStorage.getItem(\"loggedUser\")).uloga == \"PRODAVAC\") {\n        this.isProdavac = true;\n      } else {\n        this.isProdavac = false;\n      }\n    },\n    viewUsers: function viewUsers() {\n      this.$router.push(\"/api/kupac/korisnici\");\n    },\n    addProduct: function addProduct() {\n      this.$router.push(\"/api/prodavac/add-product/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n    update: function update() {\n      var _this5 = this;\n\n      axios.put(\"http://localhost:8081/logged-user/update\", this.korisnik, {\n        withCredentials: true\n      }).then(function (res) {\n        console.log(res.data);\n        alert(\"Uspesno izvrseno azuriranje kupca!\");\n\n        _this5.$router.push(\"/api/kupac/home/\" + _this5.korisnik.korisnickoIme);\n      })[\"catch\"](function (err) {\n        alert(err.response.data);\n      });\n    },\n    seeMore: function seeMore(id) {\n      this.$router.push(\"/api/kupac/products/\" + id);\n    },\n    updateKupac: function updateKupac() {\n      this.$router.push(\"/api/admin/update/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n    login: function login() {\n      this.$router.push(\"/api/login\");\n    },\n    goHome: function goHome() {\n      this.$router.push(\"/api/home\");\n    },\n    oceni: function oceni() {\n      this.OceniProdavca.proizvodId = this.$route.params.id;\n      var logovaniKorisnik = JSON.parse(localStorage.getItem(\"loggedUser\"));\n      console.log(this.OceniProdavca);\n      console.log(logovaniKorisnik);\n      var requestData = {\n        oceniProdavcaDto: this.OceniProdavca,\n        logovani: JSON.parse(localStorage.getItem(\"loggedUser\"))\n      };\n      axios.post(\"http://localhost:8081/api/oceni-prodavca\", requestData, {\n        withCredentials: true\n      }).then(function (response) {\n        alert(response.data);\n      })[\"catch\"](function (err) {\n        console.log(err);\n        alert(err.response.data);\n      });\n    },\n    logOut: function logOut() {\n      localStorage.removeItem('loggedUser');\n      this.ulogovaniKorisnik = null;\n      alert(\"Uspesno ste se odjavili!\");\n      this.$router.push('/api/home');\n    },\n    prijavi: function prijavi() {\n      if (localStorage.getItem(\"loggedUser\") != null) {\n        axios.post(\"http://localhost:8081/api/reportseller/\" + this.$route.params.id + \"?loggedUsername=\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme, this.PrijavaDto, {\n          withCredentials: true\n        }).then(function (response) {\n          alert(response.data);\n        })[\"catch\"](function (err) {\n          console.log(err);\n          alert(err.response.data);\n        });\n      } else {\n        alert(\"Niste ulogovani!\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","name","data","product","korisnik","sviProizvodi","OceniProdavca","prosecnaOcena","PrijavaDto","prijave","isProdavac","razlogPrijave","mounted","initialize","svePrijave","isProdavacF","methods","get","$route","params","username","withCredentials","then","res","console","log","uloga","proizvodi","proizvod","prodat","push","kupljeniProizvodi","err","alert","response","izmeniRecenziju","id","$router","viewReviews","JSON","parse","localStorage","getItem","korisnickoIme","viewReports","prihvatiPrijavu","post","odbaciPrijavu","obrisiRecenziju","viewUsers","addProduct","update","put","seeMore","updateKupac","login","goHome","oceni","proizvodId","logovaniKorisnik","requestData","oceniProdavcaDto","logovani","logOut","removeItem","ulogovaniKorisnik","prijavi"],"sourceRoot":"","sources":["/home/ivan/Documents/Faks/Web/Projekat/project-web-in-2024-team-12/ws-frontend/src/views/AdminPrijaveView.vue"],"sourcesContent":["<template>\n    <nav class=\"navbar navbar-expand-lg bg-body-tertiary\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\">WebShop</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mb-2 mb-lg-0\">\n        \n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" v-on:click=\"viewReviews()\">Recenzije</a>\n          </li>\n          \n            <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\" v-on:click=\"viewReports()\">Prijave</a>\n          </li>\n         \n\n        \n        </ul>\n        <form class=\"d-flex\" role=\"search\">\n          \n        </form>\n        <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n         <p id=\"log-out\" v-on:click=\"logOut()\">Log out</p>\n\n        </div>\n      </div>\n    </div>\n  </nav>\n     \n\n  <div><h2 class=\"proizvod\">Prijave</h2></div>\n  <div class=\"card-deck\">\n    <div v-for=\"prijava in prijave\" class=\"card \" style=\"width: 18rem;\">\n      \n      <div class=\"card-body div-recenzija\" >\n        <h5 class=\"card-title\">{{prijava.razlogPrijave}}</h5>\n        <!--<p class=\"card-text\">{{proizvod.opis}}</p> -->\n        <p class=\"card-text p-cena\">{{prijava.statusPrijave}}</p>\n        <a href=\"#\" class=\"btn btn-primary obrisi\" v-on:click=\"prihvatiPrijavu(prijava.id)\">Prihvati prijavu</a>\n        <a href=\"#\" class=\"btn btn-primary izmeni\" v-on:click=\"odbaciPrijavu(prijava.id)\">Odbaci prijavu</a>\n        <input type=\"text\" class=\"form-control\" id=\"inputRazlogPrijave\" placeholder=\"Razlog odbijanja\" v-model=\"razlogPrijave\">\n\n\n        \n\n      </div>\n    </div>\n  </div>\n </template>\n \n <script>\n import axios from \"axios\";\n export default {\n   name: \"SeeProdavacView\",\n   data: function () {\n     return {\n       product: {},\n       korisnik:{},\n       sviProizvodi: {},\n       OceniProdavca:{\n        prosecnaOcena: 0.0,\n       },\n       PrijavaDto: {},\n       prijave: [],\n       isProdavac : false,\n       razlogPrijave: \"\",\n     };\n     \n   },\n   mounted: function () {\n    this.initialize();\n    this.svePrijave();\n    this.isProdavacF();\n       \n            \n  },\n   methods: {\n\n    initialize: function(){\n        axios\n        .get(`http://localhost:8081/api/korisnik/view/${this.$route.params.username}`, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                this.korisnik = res.data;\n                console.log(this.korisnik);\n\n                if (this.korisnik.uloga === \"PRODAVAC\") {\n                    this.sviProizvodi = [];\n                    for (let proizvod of this.korisnik.proizvodi) {\n                        if (!proizvod.prodat) {\n                            this.sviProizvodi.push(proizvod);\n                        }\n                    }\n                } else if (this.korisnik.uloga === \"KUPAC\") {\n                    this.sviProizvodi = this.korisnik.kupljeniProizvodi;\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                alert(err.response.data);\n            });\n\n    },\n    izmeniRecenziju: function(id){\n      this.$router.push(\"/api/admin/recenzije/update/\"+id);\n    },\n    viewReviews: function(){\n      this.$router.push(\"/api/admin/recenzije/\"+JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n    viewReports: function(){\n      this.$router.push(\"/api/admin/prijave/\"+JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n\n    prihvatiPrijavu: function(id){\n        axios\n        .post(`http://localhost:8081/api/acceptreport/${id}?logovaniUsername=`+this.$route.params.username, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                \n                console.log(this.prijave);\n                alert(res.data);\n\n            \n            })\n            .catch((err) => {\n                console.log(err);\n                //alert(err.response.data);\n            });\n    },\n    odbaciPrijavu: function(id){\n        axios\n        .post(`http://localhost:8081/api/rejectreport/${id}?logovaniUsername=`+this.$route.params.username, this.razlogPrijave, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                \n                console.log(this.prijave);\n                alert(res.data);\n\n            \n            })\n            .catch((err) => {\n                console.log(err);\n                //alert(err.response.data);\n            });\n    },\n\n    obrisiRecenziju: function(id){\n      axios\n        .delete(`http://localhost:8081/api/delete-review/${id}?logovaniUsername=`+this.$route.params.username, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                alert(res.data);\n               \n\n            \n            })\n            .catch((err) => {\n                console.log(err);\n                //alert(err.response.data);\n            });\n\n\n    },\n    svePrijave: function(){\n        axios\n        .get(`http://localhost:8081/api/reports?logovaniUsername=`+this.$route.params.username, {\n        withCredentials: true,\n            })\n            .then((res) => {\n                this.prijave = res.data;\n                console.log(this.prijave);\n\n            \n            })\n            .catch((err) => {\n                console.log(err);\n                //alert(err.response.data);\n            });\n\n\n    },\n    isProdavacF: function(){\n      if(JSON.parse(localStorage.getItem(\"loggedUser\")).uloga == \"PRODAVAC\"){\n        this.isProdavac = true;\n      }\n      else{\n        this.isProdavac = false;\n\n      }\n    },\n    viewUsers: function(){\n      this.$router.push(\"/api/kupac/korisnici\");\n\n    },\n  \n    addProduct: function () {\n      this.$router.push(\"/api/prodavac/add-product/\" + JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n     update: function () {\n       axios\n         .put(\"http://localhost:8081/logged-user/update\", this.korisnik, {\n           withCredentials: true,\n         })\n         .then((res) => {\n           console.log(res.data);\n           alert(\"Uspesno izvrseno azuriranje kupca!\");\n           \n           this.$router.push(\"/api/kupac/home/\"+this.korisnik.korisnickoIme);\n         })\n         .catch((err) => {\n           alert(err.response.data);\n         });\n \n     },\n    \n   seeMore: function (id) {\n     this.$router.push(\"/api/kupac/products/\" + id);\n   },\n   updateKupac: function () {\n      this.$router.push(\"/api/admin/update/\"+JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme);\n    },\n   login: function () {\n     this.$router.push(\"/api/login\");\n   },\n  \n   goHome: function () {\n     this.$router.push(\"/api/home\");\n   },\n\n   oceni: function(){\n    this.OceniProdavca.proizvodId = this.$route.params.id;\n    const logovaniKorisnik = JSON.parse(localStorage.getItem(\"loggedUser\"));\n    console.log(this.OceniProdavca);\n    console.log(logovaniKorisnik);\n    const requestData = {\n        oceniProdavcaDto: this.OceniProdavca,\n        logovani: JSON.parse(localStorage.getItem(\"loggedUser\"))\n      };\n    axios\n       .post(\"http://localhost:8081/api/oceni-prodavca\",requestData, {withCredentials: true })\n       .then((response) => {\n       alert(response.data);\n       \n     })\n       .catch((err) => {\n       console.log(err);\n       alert(err.response.data);\n     });\n\n   },\n   logOut: function () {\n      localStorage.removeItem('loggedUser');\n      this.ulogovaniKorisnik = null;\n     \n\n      alert(\"Uspesno ste se odjavili!\");\n      this.$router.push('/api/home');\n    },\n   prijavi: function(){\n   if(localStorage.getItem(\"loggedUser\") != null){\n    axios\n       .post(\"http://localhost:8081/api/reportseller/\"+this.$route.params.id+\"?loggedUsername=\"+JSON.parse(localStorage.getItem(\"loggedUser\")).korisnickoIme,this.PrijavaDto, {withCredentials: true })\n       .then((response) => {\n       alert(response.data);\n       \n     })\n       .catch((err) => {\n       console.log(err);\n       alert(err.response.data);\n     });\n   } else{\n    alert(\"Niste ulogovani!\");\n   }\n    \n    \n   }\n   },\n };\n </script>\n\n <style scoped>\n   .g-3{\n       width: 50%;\n       margin: auto;\n   }\n\n   #btn-register{\n       margin-top: 30px;\n       width: 200px;\n   }\n\n   #loginBtn {\n background-color: #858585;\n border-color: #858585;\n}\n\n#loginBtn:hover {\n background-color: #3e4240;\n}\n\n#registerBtn {\n background-color: #858585;\n border-color: #858585;\n}\n\n#registerBtn:hover {\n background-color: #3e4240;\n}\n\n.d-flex {\n margin-right: auto;\n}\n\n#profile-photo{\n    width: 15%;\n    margin-right: 30px;\n}\n\n.card-deck {\n  display: flex;\n  height: fit-content;\n  flex-wrap: wrap;\n  align-items: center;\n  text-align: center;\n  margin: auto;\n  padding-left: 200px;\n  padding-right: 200px;\n  margin-top: 50px;\n}\n\n.card {\n  display: inline-block;\n  padding: 5px;\n  margin: 0.5%;\n}\n\n.card-text {\n  height: 50px;\n}\n\n.card-img-top {\n  width: 100%;\n}\n.btn-primary{\n  margin: auto;\n}\n\n#btn-oceni{\n  margin-top: 30px;\n  margin-bottom: 30px;\n  width: 20%;\n\n}\n.div-prijavi{\n  display: flex;\n  width: 50%;\n  margin: auto;\n  margin-bottom: 50px;\n  \n}\n\n#btn-prijavi{\n  display: inline;\n  margin: 10px;\n  width: 20%;\n\n}\n#inputRazlogPrijave{\n  \n}\n#log-out{\n  margin-right:20px;\n  margin-left: 10px;\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n.obrisi{\n  margin-bottom: 20px;\n}\n.navbar{\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n#inputRazlogPrijave{\n    margin-top: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}